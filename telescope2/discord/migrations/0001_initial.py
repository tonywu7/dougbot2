# Generated by Django 3.2.4 on 2021-06-12 14:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('snowflake', models.IntegerField(db_index=True, primary_key=True, serialize=False, verbose_name='id')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_discord.entity_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discord.entity')),
                ('prefix', models.CharField(default='t;', max_length=16)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('discord.entity',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discord.entity')),
                ('name', models.CharField(max_length=120, verbose_name='username')),
                ('discriminator', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('discord.entity',),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discord.entity')),
                ('name', models.CharField(max_length=120)),
                ('color', models.IntegerField()),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='discord.server')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('discord.entity',),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discord.entity')),
                ('nickname', models.CharField(blank=True, max_length=64)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='discord.server')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='discord.user')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('discord.entity',),
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discord.entity')),
                ('name', models.CharField(max_length=120)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='discord.server')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('discord.entity',),
        ),
    ]
