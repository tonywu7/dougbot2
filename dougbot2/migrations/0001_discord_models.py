# Generated by Django 3.2.4 on 2021-06-22 14:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ts2.discord.models


class Migration(migrations.Migration):

    replaces = [('discord', '0001_initial'), ('discord', '0002_auto_20210613_1407'), ('discord', '0003_auto_20210613_1518'), ('discord', '0004_auto_20210613_1645'), ('discord', '0005_server_name'), ('discord', '0006_commandconstraint'), ('discord', '0007_auto_20210613_1947'), ('discord', '0008_auto_20210614_0525'), ('discord', '0009_auto_20210615_0820'), ('discord', '0010_alter_commandconstraint_name'), ('discord', '0011_commandconstraint_specificity'), ('discord', '0012_server_error_handling'), ('discord', '0013_auto_20210616_1034'), ('discord', '0014_auto_20210618_1655'), ('discord', '0015_alter_server_invited_by'), ('discord', '0016_commandconstraint_error_msg')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BotCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=120, unique=True)),
            ],
            options={
                'verbose_name': 'bot command',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('snowflake', models.BigIntegerField(db_index=True, primary_key=True, serialize=False, verbose_name='id')),
                ('prefix', models.CharField(default='t;', max_length=16)),
                ('_extensions', models.TextField(blank=True)),
                ('perms', ts2.discord.models.PermissionField(default=0, verbose_name='default permissions')),
                ('name', models.TextField(default='')),
                ('logging', models.JSONField(default=dict, verbose_name='logging config')),
                ('disabled', models.BooleanField(default=False)),
                ('invited_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invited_servers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'server',
                'verbose_name_plural': 'servers',
            },
            bases=(ts2.discord.models.NamingMixin, models.Model, ts2.discord.models.ModelTranslator),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('snowflake', models.BigIntegerField(db_index=True, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=120, verbose_name='username')),
                ('discriminator', models.IntegerField()),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            bases=(ts2.discord.models.NamingMixin, models.Model, ts2.discord.models.ModelTranslator),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('snowflake', models.BigIntegerField(db_index=True, primary_key=True, serialize=False, verbose_name='id')),
                ('nickname', models.CharField(blank=True, max_length=64)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='discord.server')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='discord.user')),
            ],
            options={
                'verbose_name': 'member',
                'verbose_name_plural': 'members',
            },
            bases=(ts2.discord.models.NamingMixin, models.Model, ts2.discord.models.ModelTranslator),
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('snowflake', models.BigIntegerField(db_index=True, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=120)),
                ('type', models.IntegerField(choices=[(0, 'Text'), (1, 'Private'), (2, 'Voice'), (3, 'Group'), (4, 'Category'), (5, 'News'), (6, 'Store'), (13, 'Stage Voice')])),
                ('order', models.IntegerField(default=0)),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channels', to='discord.server')),
            ],
            options={
                'verbose_name': 'channel',
                'verbose_name_plural': 'channels',
            },
            bases=(ts2.discord.models.NamingMixin, models.Model, ts2.discord.models.ModelTranslator),
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('snowflake', models.BigIntegerField(db_index=True, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=120)),
                ('color', ts2.discord.models.ColorField()),
                ('perms', ts2.discord.models.PermissionField(verbose_name='permissions')),
                ('guild', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='discord.server')),
                ('order', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
            },
            bases=(ts2.discord.models.NamingMixin, models.Model, ts2.discord.models.ModelTranslator),
        ),
        migrations.CreateModel(
            name='CommandConstraintList',
            fields=[
                ('guild', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='command_constraints', serialize=False, to='discord.server')),
            ],
            options={
                'verbose_name': 'command constraint list',
            },
            bases=(ts2.discord.models.NamingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='CommandConstraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('channels', models.ManyToManyField(related_name='_discord_commandconstraint_channels_+', to='discord.Channel')),
                ('commands', models.ManyToManyField(related_name='constraints', to='discord.BotCommand')),
                ('roles', models.ManyToManyField(related_name='_discord_commandconstraint_roles_+', to='discord.Role')),
                ('type', models.IntegerField(choices=[(0, 'None'), (1, 'Any'), (2, 'All')], default=0)),
                ('collection', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='constraints', to='discord.commandconstraintlist')),
                ('specificity', models.IntegerField(default=0)),
                ('error_msg', models.TextField(blank=True, verbose_name='error message')),
            ],
            options={
                'verbose_name': 'command constraint',
            },
        ),
    ]
